How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    It saved manual effort of comparing the
    files line by line.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    It helps to compare new features added or changes done easily without taking much time.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Manual commits can be more logical if done correctly at the right time however it involves human judgement which may differ from person to person.
    Automatic commits may be too short and have less logic involved between two commits however it will not miss any changes to the code.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Git considers all related files as a
    repository and with each commit it saves all files in the repository irrespective of whether one file changed or more than one file changed.
    Google docs treats each file as separate and saves changes to each of them separately.

How can you use the commands git log and git diff to view the history of files?

    Git log shows a history of all changes made to the files accross all commits.
    Git diff gives the details of all changes under each commit with the commit IDs and helps to track changes accross IDs

How might using version control make you more confident to make changes that
could break something?

    Version control helps to track all changes and hence we can revert the changes which introduced a bug using git checkout for specific IDs.

Now that you have your workspace set up, what do you want to try using Git for?

    Use Git as a version control and version tracking system.
